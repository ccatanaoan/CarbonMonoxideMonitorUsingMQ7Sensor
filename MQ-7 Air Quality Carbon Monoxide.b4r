Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=resp8266wifi
Library3=rmqtt
Library4=resp8266
Library5=resp8266timetools
NumberOfFiles=0
NumberOfLibraries=5
NumberOfModules=0
Version=3.9
@EndOfDesignText@
' Carbon Monoxide (CO) Monitor Using MQ-7 sensor
'
' I used the following sites To help me reach the outcome:
'
' Gas Sensor "Carbon Monoxide" - MQ-7 aka "Flying-Fish" - https://www.hackster.io/ingo-lohs/gas-sensor-carbon-monoxide-mq-7-aka-flying-fish-e58457
' ARDUINO CO MONITOR USING MQ-7 SENSOR - http://www.instructables.com/id/Arduino-CO-Monitor-Using-MQ-7-Sensor/

' MQ-7 Carbon Monoxide Sensor: It is sensitive To gases like Alcohol (hand sanitizer), Butane (a lighter) And Difluoroethane (compressed "air" duster), among other gasses. 
' Datasheet found here: http://cvrr.ucsd.edu/ece156/ECE156Sensors/Carbon_Monoxide.pdf

'     MQ-7 Sensor    ->      ESP8266
'         A0         ->        A0
'         D0         ->        D0
'         VCC        ->        VIN (5.5V)
'         GRD        ->        GRD

'*****************************************************************************************************
'How To Select the board in B4R
'*****************************************************************************************************
'1. After connecting the ESP32, determine the COM Port.
'2. Tools > Board Selector
'3. Board: ESP32 Dev Module. If encountering error, use NodeMCU 1.0 (ESP-12E Module)
'4. Serial Port: COM12 Silicon Labs CP210x USB To UART Bridge - Note: COM port depends on system setup
'*****************************************************************************************************

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 3000
#End Region

Sub Process_Globals
	Public Serial1 As Serial
	Private MQ7Pin As Pin                 ' Output pin connected from the MQ-7 sensor
	Private MQ7PinNumber As Byte = 0x00   ' Pin number used is A0 (Analog)
	Private WiFi As ESP8266WiFi
	Private WiFiStr As WiFiSocket
	Private MQTT As MqttClient
	Private MQTTHostName As String = "mqtt.eclipseprojects.io"
	Private MQTTPort As Int = 1883
	Private WiFiSSID As String = "InternetOfThings"
	Private WiFiPassword As String = "SteelReserve"
	Private readVoltage As UInt
	Private ESP As ESP8266
	Private hostname As String = "ESP8266_MQ7" 'ignore
	Public timelib As ESPTimetools
	Public timestamp As ULong
	Private pin16 As Pin
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Delay(3000)
	Log("AppStart")
	
	Dim bb() As Byte = "LivingRoomMQ7"
	RunNative("SetHostName", bb)
	RunNative("stopAP", Null)
	
	pin16.Initialize(16, pin16.MODE_OUTPUT)
	
	' Connect to WiFi
	ConnectToWifi

	' Connect to cloud MQTT broker
	Dim ClientId As String = Rnd(0, 999999999) 'create a unique id
	MQTT.Initialize2(WiFiStr.stream, MQTTHostName, MQTTPort, ClientId, "MQTT_MessageArrived", "MQTT_Disconnected")
	MQTT_Connect(0)
End Sub

Sub Preparation1(tag As Byte)
	Log("Turn the heater fully on")
	MQ7Pin.AnalogWrite(1024) ' HIGH = 1024
	Log("Heat for 1 min")
	CallSubPlus("Preparation2",60000,0)
End Sub

Sub Preparation2(tag As Byte)
	Log("Now reducing the heating power: turn the heater to approx 1.5V")
	MQ7Pin.AnalogWrite(307.2) ' 1024x1500/5000; 1024 is Arduino 5V's steps, 1500/5000 got from 1.5V/5V
	Log("Heat for 90 sec")
	CallSubPlus("ReadSensor1",90000,0)
End Sub

Sub ReadSensor1(tag As Byte)
	Log("We need to read the sensor at 5V, but must not let it heat up. So hurry!")
	MQ7Pin.AnalogWrite(1024)
	Log("Delay for 50 milli")
	CallSubPlus("ReadSensor2",50,0) ' Getting an analog read apparently takes 100uSec
End Sub

Sub ReadSensor2(tag As Byte)
	Dim rawvoltage As UInt = MQ7Pin.AnalogRead / 2
	
	Log("*************************")
	Log("MQ-7 PPM: ",rawvoltage)
	readVoltage = rawvoltage
	
	' Get the time
	timelib.initialize("pool.ntp.org",0)
	timestamp = timelib.timestamp
	If timestamp <> 0 Then
		Dim s As String
		s = JoinStrings(Array As String(rawvoltage,"|",NumberFormat(timelib.getyear(timestamp),2,0),"-",NumberFormat(timelib.getmonth(timestamp),2,0),"-",NumberFormat(timelib.getday(timestamp),2,0),"|", _
			NumberFormat(timelib.gethour(timestamp), 2, 0),":",NumberFormat(timelib.getminute(timestamp), 2, 0),":", _
			NumberFormat(timelib.getseconds(timestamp), 2, 0)))
		Log("Sending ppm via MQTT: ",s)
		MQTT.Publish("MQ7LivingRoomCloyd",s)
	End If
	' Get the time
	
	If rawvoltage <= 100 Then
		Log("Air-Quality: CO perfect")
	else if ((rawvoltage > 100) And (rawvoltage < 400)) Or rawvoltage = 400 Then
		Log("Air-Quality: CO normal")
	else if ((rawvoltage > 400) And (rawvoltage < 900)) Or rawvoltage = 900 Then
		Log("Air-Quality: CO high")
	else If rawvoltage > 900 Then
		Log("Air-Quality: ALARM CO very high")
	Else
		Log("MQ-7 - cant read any value - check the sensor!")
	End If
	Log("*************************")
	
	CallSubPlus("Preparation1",1000,0)
End Sub

Sub MQTT_Connect(Unused As Byte)
	If WiFi.IsConnected = False Then
		ConnectToWifi
	End If
	
	If MQTT.Connect = False Then
		pin16.DigitalWrite(True)
		Log("Connecting to broker")
		MQTT.Connect
		CallSubPlus("MQTT_Connect", 1000, 0)
	Else
		pin16.DigitalWrite(False)
		Log("Connected to broker")
		MQTT.Subscribe("MQ7LivingRoomCloyd", 0)
		ReadSensor
	End If
End Sub

Sub mqtt_MessageArrived (Topic As String, Payload() As Byte)
	Log("Message arrived. Topic=", Topic, " Payload=", Payload)
	
	If Topic = "MQ7LivingRoomCloyd" Then
		If Payload = "Read voltage" Then
			' Get the time
			timelib.initialize("pool.ntp.org",0)
			timestamp = timelib.timestamp
			If timestamp <> 0 Then
				Dim s As String
				s = JoinStrings(Array As String(readVoltage,"|",NumberFormat(timelib.getyear(timestamp),2,0),"-",NumberFormat(timelib.getmonth(timestamp),2,0),"-",NumberFormat(timelib.getday(timestamp),2,0),"|", _
			NumberFormat(timelib.gethour(timestamp), 2, 0),":",NumberFormat(timelib.getminute(timestamp), 2, 0),":", _
			NumberFormat(timelib.getseconds(timestamp), 2, 0)))

			MQTT.Publish("MQ7LivingRoomCloyd",s)

			End If
			' Get the time
		Else If Payload = "Restart controller" Then
			MQTT.Publish("MQ7LivingRoomCloyd","Restarting controller by remote")
			ESP.Restart
		End If
	End If
End Sub

Sub mqtt_Disconnected
	pin16.DigitalWrite(True)
	Log("Disconnected from broker")
	MQTT.Close
	MQTT_Connect(0)
End Sub

Sub ConnectToWifi
	If WiFi.IsConnected Then
		Log("Connected to ",WiFiSSID," network, Local IP ", WiFi.LocalIp)
	Else
		pin16.DigitalWrite(True)
		Log("Connecting to WiFi")
		If WiFi.Connect2(WiFiSSID, WiFiPassword) = False Then
			ConnectToWifi
		End If
	End If
End Sub

Public Sub ReadSensor
	' Loop for MQ-7 reading
	' Init the pin with MQ-7 connected
	MQ7Pin.Initialize(MQ7PinNumber, MQ7Pin.MODE_INPUT)
	Preparation1(0)
End Sub

#If C
void SetHostName(B4R::Object* o) {
	B4R::Array* b = (B4R::Array*)B4R::Object::toPointer(o);
	char* c = (char*)b->data;
	WiFi.hostname(c);
}

void stopAP (B4R::Object* u) {
	WiFi.softAPdisconnect(true);
}
#End If

