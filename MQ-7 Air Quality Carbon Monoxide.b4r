Version=2.2
NumberOfModules=1
Module1=TimeNIST
Build1=Default,B4RDev
NumberOfFiles=0
NumberOfLibraries=5
Library1=rcore
Library2=rrandomaccessfile
Library3=resp8266wifi
Library4=rmqtt
Library5=resp8266
@EndOfDesignText@
' Carbon Monoxide (CO) Monitor Using MQ-7 sensor
'
' I used the following sites To help me reach the outcome:
'
' Gas Sensor "Carbon Monoxide" - MQ-7 aka "Flying-Fish" - https://www.hackster.io/ingo-lohs/gas-sensor-carbon-monoxide-mq-7-aka-flying-fish-e58457
' ARDUINO CO MONITOR USING MQ-7 SENSOR - http://www.instructables.com/id/Arduino-CO-Monitor-Using-MQ-7-Sensor/

' MQ-7 Carbon Monoxide Sensor: It is sensitive To gases like Alcohol (hand sanitizer), Butane (a lighter) And Difluoroethane (compressed "air" duster), among other gasses. 
' Datasheet found here: http://cvrr.ucsd.edu/ece156/ECE156Sensors/Carbon_Monoxide.pdf

'     MQ-7 Sensor    ->      ESP8266
'         A0         ->        A0
'         D0         ->        D0
'         VCC        ->        VIN (5.5V)
'         GRD        ->        GRD

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 3000
#End Region

Sub Process_Globals
	Public Serial1 As Serial
	Private MQ7Pin As Pin                 ' Output pin connected from the MQ-7 sensor
	Private MQ7PinNumber As Byte = 0x00   ' Pin number used is A0 (Analog)
	Private WiFi As ESP8266WiFi
	Private WiFiStr As WiFiSocket
	Private MQTT As MqttClient
	Private MQTTOpt As MqttConnectOptions
	Private MQTTUser As String = "vynckfaq"
	Private MQTTPassword As String = "KHSV1Q1qSUUY"
	Private MQTTHostName As String = "m14.cloudmqtt.com"
	Private MQTTPort As Int = 11816
	Private WiFiSSID As String = "RiseAboveThisHome"
	Private WiFiPassword As String = "SteelReserve"
	Private readVoltage As UInt
	Private ESP As ESP8266
	Private bc As ByteConverter
	Private NISTDate(8) As Byte
	Private NISTHour As UInt
	Private NISTMinute As UInt
	Private NISTSecond As UInt
	Private hostname As String = "ESP8266_MQ7" 'ignore
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Delay(3000)
	Log("AppStart")
	
	' Connect to WiFi
	ConnectToWifi

	' Connect to cloud MQTT broker
	Dim ClientId As String = Rnd(0, 999999999) 'create a unique id
	MQTT.Initialize2(WiFiStr.stream, MQTTHostName, MQTTPort, ClientId, "MQTT_MessageArrived", "MQTT_Disconnected")
	MQTTOpt.Initialize(MQTTUser, MQTTPassword)
	MQTT_Connect(0)
End Sub

Sub Preparation1(tag As Byte)
	Log("Turn the heater fully on")
	MQ7Pin.AnalogWrite(1024) ' HIGH = 1024
	Log("Heat for 1 min")
	CallSubPlus("Preparation2",60000,0)
End Sub

Sub Preparation2(tag As Byte)
	Log("Now reducing the heating power: turn the heater to approx 1.5V")
	MQ7Pin.AnalogWrite(307.2) ' 1024x1500/5000; 1024 is Arduino 5V's steps, 1500/5000 got from 1.5V/5V
	Log("Heat for 90 sec")
	CallSubPlus("ReadSensor1",90000,0)
End Sub

Sub ReadSensor1(tag As Byte)
	Log("We need to read the sensor at 5V, but must not let it heat up. So hurry!")
	MQ7Pin.AnalogWrite(1024)
	Log("Delay for 50 milli")
	CallSubPlus("ReadSensor2",50,0) ' Getting an analog read apparently takes 100uSec
End Sub

Sub ReadSensor2(tag As Byte)
	Dim rawvoltage As UInt = MQ7Pin.AnalogRead / 2
	
	Log("*************************")
	Log("MQ-7 PPM: ",rawvoltage)
	readVoltage = rawvoltage
	
	bc.ArrayCopy(TimeNIST.GetDate, NISTDate)
	NISTHour = TimeNIST.GetHours
	NISTMinute = TimeNIST.GetMinutes
	NISTSecond = TimeNIST.GetSeconds
	
	Dim s As String
	s = JoinStrings(Array As String(rawvoltage,"|",bc.StringFromBytes(NISTDate),"|", _
			NumberFormat(NISTHour, 2, 0),":",NumberFormat(NISTMinute, 2, 0),":", _
			NumberFormat(NISTSecond, 2, 0)))
	Log("Sending ppm via MQTT: ",s)
	If WiFi.IsConnected Then
		MQTT.Publish("MQ7",s)
	End If
	
	If rawvoltage <= 100 Then
		Log("Air-Quality: CO perfect")
	else if ((rawvoltage > 100) And (rawvoltage < 400)) Or rawvoltage = 400 Then
		Log("Air-Quality: CO normal")
	else if ((rawvoltage > 400) And (rawvoltage < 900)) Or rawvoltage = 900 Then
		Log("Air-Quality: CO high")
	else If rawvoltage > 900 Then
		Log("Air-Quality: ALARM CO very high")
	Else
		Log("MQ-7 - cant read any value - check the sensor!")
	End If
	Log("*************************")
	
	CallSubPlus("Preparation1",1000,0)
End Sub

Sub MQTT_Connect(Unused As Byte)
	If WiFi.IsConnected = False Then
		ConnectToWifi
	End If
	
	If MQTT.Connect = False Then
		Log("Connecting to broker")
		MQTT.Connect2(MQTTOpt)
		CallSubPlus("MQTT_Connect", 1000, 0)
	Else
		Log("Connected to broker")
		MQTT.Subscribe("MQ7", 0)
	End If
End Sub

Sub mqtt_MessageArrived (Topic As String, Payload() As Byte)
	Log("Message arrived. Topic=", Topic, " Payload=", Payload)
	
	If Topic = "MQ7" Then
		If Payload = "Read voltage" Then
			Dim s As String
			s = JoinStrings(Array As String(readVoltage,"|",bc.StringFromBytes(NISTDate),"|", _
			NumberFormat(NISTHour, 2, 0),":",NumberFormat(NISTMinute, 2, 0),":", _
			NumberFormat(NISTSecond, 2, 0)))
			MQTT.Publish("MQ7",s)
		Else If Payload = "Restart controller" Then
			MQTT.Publish("MQ7","Restarting controller by remote")
			ESP.Restart
		End If
	End If
End Sub

Sub mqtt_Disconnected
	Log("Disconnected from broker")
	MQTT.Close
	MQTT_Connect(0)
End Sub

Sub ConnectToWifi
	Log("Connecting to WiFi")
	WiFi.Connect2(WiFiSSID, WiFiPassword)

	If WiFi.IsConnected Then
		Log("Connected to ",WiFiSSID," network, Local IP ", WiFi.LocalIp)
		' Get time from NIST server
		TimeNIST.Start
	Else
		Log("Not Connected to WiFi")
	End If
End Sub

Public Sub TimeIsAvailable
	' Loop for MQ-7 reading
	' Init the pin with MQ-7 connected
	MQ7Pin.Initialize(MQ7PinNumber, MQ7Pin.MODE_INPUT)
	Preparation1(0)
End Sub

